{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","placeholder","value","onChange","target","getGifs","a","fetch","encodeURI","resp","json","data","gifs","map","img","id","title","url","images","original","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","querySelector"],"mappings":"sLAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAkBhD,OACE,sBAAMC,SAXa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAe,SAAAS,GAAQ,OAAMP,GAAN,mBAAqBO,OAC5CN,EAAc,MAMhB,SACE,uBACEO,KAAK,OACLC,YAAY,oBACZC,MAAQV,EACRW,SApBiB,SAAER,GACvBF,EAAcE,EAAES,OAAOF,a,+BCRdG,EAAO,uCAAG,WAAON,GAAP,qBAAAO,EAAA,4DAEL,mCAFK,SAIFC,MAAM,0CAAD,OAA4CC,UAAUT,GAAtD,6BAFR,qCAFK,cAIfU,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE5B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,SAASF,QAZT,kBAiBdL,GAjBc,4CAAH,sDCGPQ,EAAc,SAAC,GAAuB,EAArBL,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAGvC,OACE,sBAAKI,UAAU,OAAf,UACE,qBACEC,IAAML,EACNM,IAAMP,IAER,6BAAKA,QCREQ,EAAU,SAAC,GAAkB,IAAhBzB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEhBR,mBAAS,CACjCoB,KAAK,GACLc,SAAS,IAJ+B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAqB1C,OAdAC,qBAAW,WAETvB,EAASN,GACN8B,MAAM,SAAAC,GAELH,EAAS,CACPhB,KAAMmB,EACNL,SAAS,SAKd,CAAC1B,IAEG2B,EDlB4BK,CAAchC,GAAnCmB,EAFyB,EAE/BP,KAAec,EAFgB,EAEhBA,QAEvB,OACE,gCACE,qBAAIJ,UAAU,iBAAd,6BAAiDtB,EAAjD,OAEE0B,GACA,sBAAKJ,UAAU,WAAf,UACE,qBAAKA,UAAU,iBACf,qBAAKA,UAAU,iBACf,qBAAKA,UAAU,iBACf,qBAAKA,UAAU,iBACf,qBAAKA,UAAU,iBACf,qBAAKA,UAAU,oBAInB,qBAAKA,UAAU,kEAAf,SAEIH,EAAOL,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAEOA,GADCA,EAAIC,aEvBXiB,EAAe,WAAO,IAAD,EAEIzC,mBAAU,IAFd,mBAEzB0C,EAFyB,KAEb3C,EAFa,KAIhC,OACE,qCACA,oBAAI+B,UAAU,QAAd,2BAEA,cAAC,EAAD,CAAa/B,cAAgBA,IAE7B,6BAEI2C,EAAWpB,KAAK,SAAAd,GAAQ,OACtB,cAAC,EAAD,CAEEA,SAAWA,GADLA,YCXlBmC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,cAAc,W","file":"static/js/main.a6b13c95.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleOnChange = ( e ) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if( inputValue.trim().length > 2 ) {\r\n      setCategories( category => [ inputValue, ...category] );\r\n      setInputValue('');\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <input \r\n        type=\"text\"\r\n        placeholder=\"Buscar una imagen\"\r\n        value={ inputValue }\r\n        onChange={ handleOnChange }\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async( category ) => {\r\n\r\n  const api_key = 'GBrOAATEhVzVZL5B2pPFTEI1z6hrcoQx';\r\n\r\n  const resp = await fetch(`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=${api_key}`);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map( img => {\r\n\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.original.url\r\n    }\r\n\r\n  });\r\n\r\n  return gifs;\r\n\r\n};","import React from 'react';\r\nimport '../index.css';\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <img \r\n        src={ url }\r\n        alt={ title }\r\n      />\r\n      <h3>{title}</h3>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  \r\n  const { data: images , loading } = useFetchGifs( category );\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"category-title\">Resultados de: \"{ category }\"</h3>\r\n\r\n      { loading && \r\n        <div className=\"sk-chase\">\r\n          <div className=\"sk-chase-dot\"></div>\r\n          <div className=\"sk-chase-dot\"></div>\r\n          <div className=\"sk-chase-dot\"></div>\r\n          <div className=\"sk-chase-dot\"></div>\r\n          <div className=\"sk-chase-dot\"></div>\r\n          <div className=\"sk-chase-dot\"></div>\r\n        </div>\r\n      }\r\n\r\n      <div className=\"cards-container animate__animated animate__fadeIn animate__slow\">\r\n        {\r\n          images.map( img => \r\n            <GifGridItem \r\n              key={ img.id }\r\n              {... img}\r\n            />\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n  const [state, setstate] = useState({\r\n    data:[],\r\n    loading: true\r\n  });\r\n\r\n  useEffect( () => {\r\n \r\n    getGifs( category )\r\n      .then( imgs => {\r\n\r\n        setstate({\r\n          data: imgs,\r\n          loading: false\r\n        });\r\n        \r\n      });\r\n  \r\n  }, [category]);\r\n\r\n  return state;\r\n\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState( [] );\r\n\r\n  return (\r\n    <>\r\n    <h2 className=\"title\">GifExpert App</h2>\r\n    \r\n    <AddCategory setCategories={ setCategories }/>\r\n\r\n    <ol>\r\n      { \r\n        categories.map( category => (\r\n          <GifGrid \r\n            key={ category }\r\n            category={ category }\r\n          />\r\n        )) \r\n      }\r\n    </ol>\r\n    </>\r\n  )\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.querySelector('#root')\n);"],"sourceRoot":""}